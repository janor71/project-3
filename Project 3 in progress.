//PROJECT 3 --- CST 112 EVENING

// MY FIRST NAME IS ------ Rebeca
// MY LAST NAME  IS --------Janowicz
// MY THIRD NAME IS--------Vicky           I don't have a middle so I am gonna pick a random name

// THREE WORDS

//  first word............root
//  second word...........jam
//  third word............voice

String title=  "CST112 PROJECT 3" ;
String news= "Click any ball to reset it to middle half of table.(r resets all, m= mouse walks across the screen)";
String author=  "Rebeca Janowicz";
String title1 =  " COLLISIONS=";

// BIRD, RAT
Bird b1;

// GLOBALS FOR THE BALLSS
float rootX, rootY,  rootDX, rootDY;
float jamX,  jamY,  jamDX,  jamDY; 
float voiceX,  voiceY,  voiceDX,  voiceDY; 

//GLOBALS FOR TABLE 
float oregon = 50, texas= 400 , dakota= 150, maine = 650;                           // TABLE PERIMETER 
float midwest= 350;
boolean wall = true;
boolean going = false;
int pooltableR=23, pooltableG=85, pooltableB= 18;     // GREEN POOL TABLE 

int collisions;
int count = 0;

// GLOBALS FOR BUTTONS 
float buttonX=0;
float buttonY=0;
float buttonW= 100;
float buttonH= 50;

float buttonX2=0;
float buttonY2=110;
float buttonW2= 120;
float buttonH2= 60;
float ratX=0;
float ratY = 480;
float ratDX = 1;

// SETUP
void setup(){
size(700,600); 
 b1 = new Bird ();
   
     oregon= 50;                        
     texas = 500;                       
     dakota =250;                       
     maine = 650; 
     midwest= 350;
   
 reset();
}
void reset() {
  if (wall = true) {
//LOCATION OF BALLS
     rootX =  random(midwest, maine);        rootY= random(texas,dakota);
     jamX =   random(midwest, maine);        jamY = random(texas,dakota);
     voiceX = random(midwest, maine);        voiceY =random(texas,dakota);
  
// SPEED OF BALLS
     rootDX =  random(1,3);        rootDY= random(1,3);
     jamDX =   random(1,3);        jamDY = random(1,3);
     voiceDX = random(1,3);        voiceDY=random(1,3);
    
     
    pooltableR=23;
    pooltableG=85;
    pooltableB= 18;
    collisions=0;
  }
}
void draw() {
      poolTable(oregon, texas, maine,dakota);
      bounce();
      balls();
      collisions();
      message();
      buttons();
      rat();
      grass();
      clouds();
      
      // BIRD CODE
      b1. display();
      b1. move();
      count= count +1;
 
  if (going) { 
    
  ratX = ratX + 1; }
}

// BIRD
class Bird {
  float birdX;
  float birdY;
  float birdDX; 

Bird () {
     birdX = 30;
     birdY = 30;
     birdDX = 1;
 
}
// DISPLAY BIRD
void display () {
     fill(240,34,61);
     stroke(0);
     ellipse(birdX, birdY, 60,10);
     fill(183,31,34);
     
   if(count/30%2 == 0) {
      triangle(birdX, birdY+5, birdX-10, birdY-20, birdX+15, birdY+5);
      triangle(birdX, birdY-5, birdX-10, birdY-20, birdX+15, birdY-5);
   }else { 
     triangle(birdX, birdY+5, birdX-10, birdY+30, birdX+15, birdY+5);
     triangle(birdX, birdY-5, birdX-10, birdY+30, birdX+15, birdY-5);
     }
     
     fill(234,171,107);
     triangle(birdX+30, birdY+2, birdX+40, birdY, birdX+30, birdY-2); 
    }
    // MOVE BIRD
void move() {
   birdX = birdX + birdDX;
   if(birdX > width) {
     birdX = 0;
   }
    }
}


  //Grass 
  void grass() { 
 stroke(14,118,20);
 strokeWeight(3);
 
 int grassX = 0;
   while(grassX < width) {
    if (count/30 % 2== 0) {
      line(grassX+10,600,grassX,height-50) ;
    }else {
       line(grassX-10,600,grassX,height-50);
    }
        grassX = grassX+10; 
   }
 }
 
/* Use a "for" loop to display a random number of small clouds drifting left to right above the table.
 (A new random number of clouds,  from one to seven, 
 is computed when clouds disappear to the right.)*/
 
 
 // CLOUDS
 void clouds () {
   for ( int cloud = 0; cloud < width; cloud += 150) {
      
     // int stuff = 100;
        noStroke();
        fill(225);
        ellipse(cloud+20, 130, 40,45);
        ellipse(cloud+10, 150, 80,35);
        ellipse(cloud+30, 150, 70,50);  
        
  }
 }
  
// SHOWING POOL TABLE      

void poolTable(float oregon, float texas, float maine, float dakota)  {
      background(130,209,219);     
      rectMode(CORNERS);
      fill(pooltableR, pooltableG, pooltableB);
      strokeWeight(20);
      stroke(108,45,49);
      rect(oregon,texas,maine, dakota); 
      fill(255);
      strokeWeight(20);
      
   if (wall== true){
      float midwest= (oregon+maine)/2;
      strokeWeight(20);
      stroke(108,45,49);
      line(midwest, texas, midwest, dakota);
   }
  }  
 
  
// SHOW BALLS 
  void balls() {
      noStroke();
      fill(252,231,66);                      // YELLOW root
      ellipse( rootX,rootY,30,30);
      fill(27,31,170 );                      // BLUE root
      ellipse( jamX,jamY, 30,30 );
      fill(240,52,19);                       // RED root
      ellipse( voiceX,voiceY, 30,30 ); 
    
// BALLS NUMBERED      
      fill(0); 
      textSize(10);
      text('1', rootX, rootY);               
      text('2', jamX,jamY);
      text('3', voiceX,voiceY);
  }

//BALLS BOUNCE OF POOL TABLE  
  void bounce() {
    
  if (wall == true) { 
      rootX += rootDX; if ( rootX < midwest + 20|| rootX > maine)    rootDX *= -1;
      rootY += rootDY; if ( rootY > texas  || rootY < dakota )       rootDY *=  -1; 
      
      
      jamX += jamDX;   if ( jamX < midwest +20 || jamX > maine )    jamDX *= -1; 
      jamY += jamDY;   if ( jamY > texas|| jamY < dakota)           jamDY *=  -1;
       
      voiceX += voiceDX;  if ( voiceX < midwest +20|| voiceX  > maine)    voiceDX *= -1;  
      voiceY += voiceDY;  if ( voiceY > texas|| voiceY < dakota)          voiceDY *=  -1;  
  }
      rootX += rootDX; if ( rootX < oregon|| rootX > maine)    rootDX *= -1;
      rootY += rootDY; if ( rootY > texas  || rootY < dakota )       rootDY *=  -1; 
      
      
      jamX += jamDX;   if ( jamX < oregon || jamX > maine )    jamDX *= -1; 
      jamY += jamDY;   if ( jamY > texas|| jamY < dakota)           jamDY *=  -1;
       
      voiceX += voiceDX;  if ( voiceX < oregon|| voiceX  > maine)    voiceDX *= -1;  
      voiceY += voiceDY;  if ( voiceY > texas|| voiceY < dakota)          voiceDY *=  -1;  
     
}
// COLLISIONS 
void collisions() {
      float tmp;
      
        if ( dist( rootX,rootY, jamX,jamY ) < 30 ) {
          tmp=jamDX;  jamDX=rootDX;  rootDX=tmp;
          tmp=jamDY;  jamDY=rootDY;  rootDY=tmp;
          collisions = collisions +1;
        }
          
          if ( dist( jamX,jamY, voiceX,voiceY ) < 30 ) {
          tmp=voiceDX;  voiceDX=jamDX;  jamDX=tmp;
          tmp=voiceDY;  voiceDY= jamDY;  jamDY=tmp;
          collisions = collisions + 1;
        }
           if ( dist( rootX,rootY, voiceX,voiceY ) < 30 ) {
          tmp=voiceDX;  voiceDX=rootDX;   rootDX=tmp;
          tmp=voiceDY;  voiceDY= rootDY;  rootDY=tmp;
          collisions = collisions + 1;
         }
  }
   
  // MESSAGES 
    void message() {
      fill(0);
      stroke(0);
      textSize(15);
      text( title, 200, 20 );
      text( news, 200, 40);
       text( author,10,540);
      textSize(20);
      text(collisions,width/2-10,height-525);
      text(title1,200,height-525);
  }
  
  // BUTTONS CONTROL CODE
  void buttons() {
  noStroke();
  fill(108,45,49);
  rect(buttonX, buttonY, buttonW, buttonH);
  fill(255);
  text("RESET", buttonX+20, buttonY+35);
  // REMOVE WALL    
  noStroke();
  fill(108,45,49);
  rect(buttonX2, buttonY2, buttonW2, buttonH2);
  fill(255);
  text("remove wall", buttonX2, buttonY2-10);
  }
// RAT   
 void rat() {  
    strokeWeight(1);
    stroke(0);
    fill(155);                                  // ear and body's fill
    ellipse(ratX,ratY-10,40,30 );                // rat's body
    ellipse(ratX+10,ratY-27,15,15);             // ear
    fill(95,62,21);                            // tail color
    ellipse(ratX-25,ratY-15,10,1);              // tail
    fill(95,62,21);                            // ear color
    fill(0);                                   // eye, nose color
    ellipse(ratX+10,ratY-15,5,3);              // eye
    ellipse(ratX+20,ratY-5,5,5);              // nose

// RAT LEGS
   float leg1=ratX+10, leg2=ratX-15;

   strokeWeight(5);
   stroke(0); 
   if (count/30 % 2 == 0) {
      line(leg1,ratY, leg1,ratY+10);
      line(leg2,ratY, leg2,ratY+10);
   } else{
      line(leg1,ratY, leg1-5,ratY+10);
      line(leg2,ratY, leg2-5,ratY+10);
   }
   strokeWeight(1);
 }
 
  void mousePressed() {

   if ((mouseX < buttonX + buttonW &&
        mouseX > buttonX)&&
       (mouseY < buttonY + buttonH &&
        mouseY > buttonY )) {
        reset();
        
     } else if 
  // RESTORES THE WALL      ( although is not working). 
       (mouseX < buttonX2 + buttonW2 ||
        mouseY < buttonY2 + buttonH2 )
         {  wall = false;
     
            
      // RESET THE BALLS RANDOMLY      
      } else if 
          (mouseX <= rootX &&
           mouseY <= rootY) 
          {rootX= random(midwest, maine);   rootY= random(texas, dakota);   
         
      } else if 
          (mouseX <= jamX &&
           mouseY <= jamY) 
         {jamX= random(midwest, maine);   jamY= random(texas, dakota); 
         
      } else if 
          (mouseX <= voiceX &&
           mouseY <= voiceY) 
         {  voiceX= random(midwest, maine);   voiceY= random(texas, dakota); }
       
         
  }
    

  void keyPressed() {

    
   if (key == 'r') reset();
   if (key == 'w') { wall=false; }
   if (key == 'q') { exit();  }
   if (key == 'p') { pooltableR=252;  pooltableG=176; pooltableB= 235; }
   if ( key =='m' ){ going = true ; 
 } else {
        going = false;
      }
  
       if (key == '1') {  rootX= random(midwest, maine);   rootY= random(texas, dakota);   } 
     
       if (key == '2') {  jamX= random(midwest, maine);    jamY= random(texas, dakota);    } 
       
       if (key == '3') {  voiceX= random(midwest, maine);  voiceY= random(texas, dakota);  }
       
    /*   // THIS IS EXTRA. IT WILL RESET THE BALLS RANDOMLY IF WALL IS REMOVE. 
     
   if (wall ==false) {
     
       if (key == '1') { rootX= random(oregon, maine);   rootY= random(texas, dakota);     } 
   
       if (key == '2') { jamX= random(oregon, maine);    jamY= random(texas, dakota);      } 
    
       if (key == '3') { voiceX= random(oregon, maine);  voiceY= random(texas, dakota);    }
    }*/

   }
